<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LAPTOP-6UNA8P7R" failures="0" tests="2" name="org.AppiumBasic.Rotate_Clipboard_Keyevent" time="13.379" errors="1" timestamp="2023-11-13T18:05:39 EST" skipped="1">
  <testcase classname="org.AppiumBasic.Rotate_Clipboard_Keyevent" name="Micellaneous" time="0.000">
    <skipped/>
  </testcase> <!-- Micellaneous -->
  <system-out/>
  <testcase classname="org.AppiumBasic.Rotate_Clipboard_Keyevent" name="ConfigureAppium" time="13.379">
    <error message="Could not start a new session. Response code 500. Message: A new session could not be created. Details: java.lang.IllegalStateException: UiAutomation not connected! 
Host info: host: &#039;LAPTOP-6UNA8P7R&#039;, ip: &#039;10.0.0.242&#039;
Build info: version: &#039;4.15.0&#039;, revision: &#039;1d14b5521b&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.7&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=SuryaEmulator, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\Owner\eclipse-AppiumProject\AppiumProject2\src\test\java\resources\ApiDemos-debug.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\Owner\eclipse-Appi..., appium:automationName: UIAutomator2, appium:deviceName: SuryaEmulator, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\Owner\eclipse-Appi..., appium:automationName: UIAutomator2, appium:deviceName: SuryaEmulator, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: A new session could not be created. Details: java.lang.IllegalStateException: UiAutomation not connected! 
Host info: host: 'LAPTOP-6UNA8P7R', ip: '10.0.0.242'
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=SuryaEmulator, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=C:\Users\Owner\eclipse-AppiumProject\AppiumProject2\src\test\java\resources\ApiDemos-debug.apk}], desiredCapabilities=Capabilities {appium:app: C:\Users\Owner\eclipse-Appi..., appium:automationName: UIAutomator2, appium:deviceName: SuryaEmulator, platformName: ANDROID}}]
Capabilities {appium:app: C:\Users\Owner\eclipse-Appi..., appium:automationName: UIAutomator2, appium:deviceName: SuryaEmulator, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at org.AppiumBasic.BaseTest.ConfigureAppium(BaseTest.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:180)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- ConfigureAppium -->
  <system-out/>
</testsuite> <!-- org.AppiumBasic.Rotate_Clipboard_Keyevent -->
